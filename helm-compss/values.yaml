# Default values for compss-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#oriolmac/compss-test:latest
#registry.gitlab.bsc.es/ppc/benchmarks/smart-city/smart-city-compss:1.0-3.3-final2-arm
image:
  repository: oriolmac/build-test
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

mqtt:
  enabled: false
  image:
    repository: oriolmac/mqtt-broker
    tag: latest
    pullPolicy: Always
  port: 1883
  nodePort: 31883

compss:
  # namespace: {}
  master:
    labels:
      node: master
    ports:
      name: ssh
    # local volume in node where the master is executed
    volume: 
      localPath: /home/minikube  # previously mounted with minikube mount and existing locally
      node: minikube # Minikube name, by default minikube
    prometheusClient: 
      enabled: false
      buckets: "-inf, 0.0001, 0.0005, 0.001, 0.0025, 0.005, 0.01, 0.1, 1, 10, 50, 100, 200, inf" # Histogram bucket
      containerPort: 15000
      redisContainerPort: 6379

    scheduler_config:
    #  vertical_scalability: "true"
    #  vertical_increasing_cpus: 2 # (integer)
    #  vertical_scaling_up_taskThreshold: "115" # ~ 2 min 45s

  worker:
    number: 2
    labels:
      node: worker
    resources:
      cpu: 1
      memory: 2  # in gigabytes
    ports:
      name: ssh
    prometheusClient: 
      enabled: false
      buckets: "-inf, 0.0001, 0.0005, 0.001, 0.0025, 0.005, 0.01, 0.1, 1, 10, 50, 100, 200, inf" # Histogram bucket
      containerPort: 15000
      redisContainerPort: 6379

  service:
    ssh: 22

app:
  context:
    folderPath: /home/omartinez/compss-matmul/matmul-extract
    file: matmul.py
  params:
    num_blocks: "3"
    elems_per_block: "1024"
    number_iterations: "1"


monitoring:
  enabled: true
  port: 15000
  prometheusUrl: http://prometheus-kube-prometheus-prometheus.monitoring.svc:9090
  image:
    repository: oriolmac/monitoring-api
    tag: latest
    pullPolicy: Always
  servicemonitor:
    releaseName: prometheus
  namespace: monitoring
  node:



